#load library
library('DESeq2')

#input samples to R
c1c2sampleFiles<-grep('clone', list.files('Desktop/c1c2htseqcount/'),value=TRUE)
c1c2sampleFiles
 [1] "clone1U2AF1S34F_KRASG12V_1.tsv" "clone1U2AF1S34F_KRASG12V_2.tsv" "clone1U2AF1S34F_KRASG12V_3.tsv" "clone1U2AF1S34F_LACZ_1.tsv"     "clone1U2AF1S34F_LACZ_2.tsv"    
 [6] "clone1U2AF1S34F_LACZ_3.tsv"     "clone1U2AF1WT_KRASG12V_1.tsv"   "clone1U2AF1WT_KRASG12V_2.tsv"   "clone1U2AF1WT_KRASG12V_3.tsv"   "clone1U2AF1WT_LACZ_1.tsv"      
[11] "clone1U2AF1WT_LACZ_2.tsv"       "clone1U2AF1WT_LACZ_3.tsv"       "clone2U2AF1S34FKRASG12V_1.tsv"  "clone2U2AF1S34FKRASG12V_2.tsv"  "clone2U2AF1S34FKRASG12V_3.tsv" 
[16] "clone2U2AF1S34FLACZ_1.tsv"      "clone2U2AF1S34FLACZ_2.tsv"      "clone2U2AF1S34FLACZ_3.tsv"      "clone2U2AF1WTKRASG12V_1.tsv"    "clone2U2AF1WTKRASG12V_2.tsv"   
[21] "clone2U2AF1WTKRASG12V_3.tsv"    "clone2U2AF1WTLACZ_1.tsv"        "clone2U2AF1WTLACZ_2.tsv"        "clone2U2AF1WTLACZ_3.tsv"       

#assign sample conditions (genotype)
c1c2_samplecondition <- c('U2AF1_S34F_KRAS_G12V', 'U2AF1_S34F_KRAS_G12V', 'U2AF1_S34F_KRAS_G12V', 'U2AF1_S34F_LACZ', 'U2AF1_S34F_LACZ', 'U2AF1_S34F_LACZ', 'U2AF1_WT_KRAS_G12V', 'U2AF1_WT_KRAS_G12V', 'U2AF1_WT_KRAS_G12V', 'U2AF1_WT_LACZ', 'U2AF1_WT_LACZ', 'U2AF1_WT_LACZ', 'U2AF1_S34F_KRAS_G12V', 'U2AF1_S34F_KRAS_G12V', 'U2AF1_S34F_KRAS_G12V', 'U2AF1_S34F_LACZ', 'U2AF1_S34F_LACZ', 'U2AF1_S34F_LACZ', 'U2AF1_WT_KRAS_G12V', 'U2AF1_WT_KRAS_G12V', 'U2AF1_WT_KRAS_G12V', 'U2AF1_WT_LACZ', 'U2AF1_WT_LACZ', 'U2AF1_WT_LACZ')

#assign batch (clone)
c1c2Batch<-c("clone 1", "clone 1", "clone 1", "clone 1", "clone 1", "clone 1", "clone 1", "clone 1", "clone 1", "clone 1", "clone 1", "clone 1", "clone 2", "clone 2", "clone 2", "clone 2", "clone 2", "clone 2", "clone 2", "clone 2", "clone 2", "clone 2", "clone 2", "clone 2")

#create sample table
c1c2sampleTable<-data.frame(sampleName=c1c2sampleFiles, fileName=c1c2sampleFiles, condition=c1c2_samplecondition, batch=c1c2Batch)

#print sample table to verify inputs
c1c2sampleTable

#                      sampleName                       fileName            condition   batch
# 1  clone1U2AF1S34F_KRASG12V_1.tsv clone1U2AF1S34F_KRASG12V_1.tsv U2AF1_S34F_KRAS_G12V clone 1
# 2  clone1U2AF1S34F_KRASG12V_2.tsv clone1U2AF1S34F_KRASG12V_2.tsv U2AF1_S34F_KRAS_G12V clone 1
# 3  clone1U2AF1S34F_KRASG12V_3.tsv clone1U2AF1S34F_KRASG12V_3.tsv U2AF1_S34F_KRAS_G12V clone 1
# 4      clone1U2AF1S34F_LACZ_1.tsv     clone1U2AF1S34F_LACZ_1.tsv      U2AF1_S34F_LACZ clone 1
# 5      clone1U2AF1S34F_LACZ_2.tsv     clone1U2AF1S34F_LACZ_2.tsv      U2AF1_S34F_LACZ clone 1
# 6      clone1U2AF1S34F_LACZ_3.tsv     clone1U2AF1S34F_LACZ_3.tsv      U2AF1_S34F_LACZ clone 1
# 7    clone1U2AF1WT_KRASG12V_1.tsv   clone1U2AF1WT_KRASG12V_1.tsv   U2AF1_WT_KRAS_G12V clone 1
# 8    clone1U2AF1WT_KRASG12V_2.tsv   clone1U2AF1WT_KRASG12V_2.tsv   U2AF1_WT_KRAS_G12V clone 1
# 9    clone1U2AF1WT_KRASG12V_3.tsv   clone1U2AF1WT_KRASG12V_3.tsv   U2AF1_WT_KRAS_G12V clone 1
# 10       clone1U2AF1WT_LACZ_1.tsv       clone1U2AF1WT_LACZ_1.tsv        U2AF1_WT_LACZ clone 1
# 11       clone1U2AF1WT_LACZ_2.tsv       clone1U2AF1WT_LACZ_2.tsv        U2AF1_WT_LACZ clone 1
# 12       clone1U2AF1WT_LACZ_3.tsv       clone1U2AF1WT_LACZ_3.tsv        U2AF1_WT_LACZ clone 1
# 13  clone2U2AF1S34FKRASG12V_1.tsv  clone2U2AF1S34FKRASG12V_1.tsv U2AF1_S34F_KRAS_G12V clone 2
# 14  clone2U2AF1S34FKRASG12V_2.tsv  clone2U2AF1S34FKRASG12V_2.tsv U2AF1_S34F_KRAS_G12V clone 2
# 15  clone2U2AF1S34FKRASG12V_3.tsv  clone2U2AF1S34FKRASG12V_3.tsv U2AF1_S34F_KRAS_G12V clone 2
# 16      clone2U2AF1S34FLACZ_1.tsv      clone2U2AF1S34FLACZ_1.tsv      U2AF1_S34F_LACZ clone 2
# 17      clone2U2AF1S34FLACZ_2.tsv      clone2U2AF1S34FLACZ_2.tsv      U2AF1_S34F_LACZ clone 2
# 18      clone2U2AF1S34FLACZ_3.tsv      clone2U2AF1S34FLACZ_3.tsv      U2AF1_S34F_LACZ clone 2
# 19    clone2U2AF1WTKRASG12V_1.tsv    clone2U2AF1WTKRASG12V_1.tsv   U2AF1_WT_KRAS_G12V clone 2
# 20    clone2U2AF1WTKRASG12V_2.tsv    clone2U2AF1WTKRASG12V_2.tsv   U2AF1_WT_KRAS_G12V clone 2
# 21    clone2U2AF1WTKRASG12V_3.tsv    clone2U2AF1WTKRASG12V_3.tsv   U2AF1_WT_KRAS_G12V clone 2
# 22        clone2U2AF1WTLACZ_1.tsv        clone2U2AF1WTLACZ_1.tsv        U2AF1_WT_LACZ clone 2
# 23        clone2U2AF1WTLACZ_2.tsv        clone2U2AF1WTLACZ_2.tsv        U2AF1_WT_LACZ clone 2
# 24        clone2U2AF1WTLACZ_3.tsv        clone2U2AF1WTLACZ_3.tsv        U2AF1_WT_LACZ clone 2

#generate ddsHTSeq object
c1c2_ddsHTSeq<-DESeqDataSetFromHTSeqCount(sampleTable=c1c2sampleTable, directory="Desktop/c1c2htseqcount/", design=~batch + condition)

# Note: levels of factors in the design contain characters other than
#  letters, numbers, '_' and '.'. It is recommended (but not required) to use
#  only letters, numbers, and delimiters '_' or '.', as these are safe characters
#  for column names in R. [This is a message, not a warning or an error]
#Warning message:
#In DESeqDataSet(se, design = design, ignoreRank) :
#  some variables in design formula are characters, converting to factors

c1c2_ddsHTSeq
# class: DESeqDataSet 
# dim: 60642 24 
# metadata(1): version
# assays(1): counts
# rownames(60642): A1BG A1BG-AS1 ... hsa-mir-1253 hsa-mir-423
# rowData names(0):
# colnames(24): clone1U2AF1S34F_KRASG12V_1.tsv clone1U2AF1S34F_KRASG12V_2.tsv ... clone2U2AF1WTLACZ_2.tsv clone2U2AF1WTLACZ_3.tsv
# colData names(2): condition batch

#Create contrast levels (genotypes)
colData(c1c2_ddsHTSeq)$condition<-factor(colData(c1c2_ddsHTSeq)$condition, levels=c('U2AF1_WT_LACZ', 'U2AF1_S34F_LACZ', 'U2AF1_WT_KRAS_G12V', 'U2AF1_S34F_KRAS_G12V'))

#Relevel to make all contrast against WT LacZ genotype
c1c2_ddsHTSeq$condition <- relevel(c1c2_ddsHTSeq$condition, ref = 'U2AF1_WT_LACZ')

#create the deseq object, which will be normalized
c1c2_dds<-DESeq(c1c2_ddsHTSeq)

# estimating size factors
#  Note: levels of factors in the design contain characters other than
#  letters, numbers, '_' and '.'. It is recommended (but not required) to use
#  only letters, numbers, and delimiters '_' or '.', as these are safe characters
#  for column names in R. [This is a message, not a warning or an error]
# estimating dispersions
# gene-wise dispersion estimates
# mean-dispersion relationship
#  Note: levels of factors in the design contain characters other than
#  letters, numbers, '_' and '.'. It is recommended (but not required) to use
#  only letters, numbers, and delimiters '_' or '.', as these are safe characters
#  for column names in R. [This is a message, not a warning or an error]
# final dispersion estimates
# fitting model and testing

#Print out deseq object
c1c2_dds
# class: DESeqDataSet 
# dim: 60642 24 
# metadata(1): version
# assays(4): counts mu H cooks
# rownames(60642): A1BG A1BG-AS1 ... hsa-mir-1253 hsa-mir-423
# rowData names(34): baseMean baseVar ... deviance maxCooks
# colnames(24): clone1U2AF1S34F_KRASG12V_1.tsv clone1U2AF1S34F_KRASG12V_2.tsv ... clone2U2AF1WTLACZ_2.tsv clone2U2AF1WTLACZ_3.tsv
# colData names(3): condition batch sizeFactor

#check resultsNames for contrasts I expect
resultsNames(c1c2_dds)
#[1] "Intercept"                                       "batch_clone.2_vs_clone.1"                        "condition_U2AF1_S34F_LACZ_vs_U2AF1_WT_LACZ"     
#[4] "condition_U2AF1_WT_KRAS_G12V_vs_U2AF1_WT_LACZ"   "condition_U2AF1_S34F_KRAS_G12V_vs_U2AF1_WT_LACZ"

#do a pca of non batch corrected and batch corrected deseq2 objects 
#do vst transform first to help it cluster
c1c2_vst <- vst(c1c2_dds, blind=FALSE)
c1c2_mat <- assay(c1c2_vst)

#remove batch effects (clones)
batchcorrected_c1c2mat <- limma::removeBatchEffect(c1c2_mat, c1c2Batch)
assay(c1c2_vst) <- batchcorrected_c1c2mat
batchcorrected_c1c2mat <- assay(c1c2_vst)

#plot PCA to look at clustering of samples
plotPCA(c1c2_vst, intgroup=c("condition", "batch"))
plotPCA(c1c2_vst, intgroup=c("condition", "batch"), returnData=TRUE)
#Conclusion: Even with Limma correction, clones still clustered separately. For statistical contrasts, include clone in design to look for changes that persist in both clones

#Check normalized gene counts for individual genes of interest
plotCounts(c1c2_dds, gene='CARNMT1', intgroup=c('condition', 'batch'), returnData=TRUE)

#Mike says either with or without LRT is fine so long as you include batch in design: https://support.bioconductor.org/p/117903/
#do LRT calculation for DESeq2 model
LRTbatchc1c2_dds <- DESeq(c1c2_dds, test="LRT", reduced=~batch)

# using pre-existing size factors
# estimating dispersions
# found already estimated dispersions, replacing these
# gene-wise dispersion estimates
# mean-dispersion relationship
#  Note: levels of factors in the design contain characters other than
#  letters, numbers, '_' and '.'. It is recommended (but not required) to use
#  only letters, numbers, and delimiters '_' or '.', as these are safe characters
#  for column names in R. [This is a message, not a warning or an error]
# final dispersion estimates
# fitting model and testing

#perform contrast on LRTbatch_dds object
#s34f lacz vs. wt lacz
c1c2u2af1s34f_lacz_vs_wtlacz_res <- results(LRTbatchc1c2_dds, contrast=c("condition", "U2AF1_S34F_LACZ", "U2AF1_WT_LACZ"))

# log2 fold change (MLE): condition U2AF1_S34F_LACZ vs U2AF1_WT_LACZ 
# LRT p-value: '~ batch + condition' vs '~ batch' 
# DataFrame with 60642 rows and 6 columns
#                baseMean log2FoldChange     lfcSE       stat     pvalue      padj
#               <numeric>      <numeric> <numeric>  <numeric>  <numeric> <numeric>
# A1BG            2.410861       0.723586  0.766447    3.90216   0.272225  0.428660
# A1BG-AS1      325.679038       0.028117  0.116894    4.83658   0.184162  0.324706
# A1CF            0.000000             NA        NA         NA         NA        NA
# A2M             0.673074      -2.225490  1.775833    3.86985   0.275865        NA
# A2M-AS1         8.505823      -0.203055  0.467037    3.10339   0.375958  0.535881
# ...                  ...            ...       ...        ...        ...       ...
# ZYX          8.40173e+03       0.166008 0.1048022 11.3233567 0.01009990 0.0357886
# ZYXP1        0.00000e+00             NA        NA         NA         NA        NA
# ZZEF1        1.91535e+03      -0.062316 0.0701218 11.8879496 0.00777702 0.0290238
# hsa-mir-1253 0.00000e+00             NA        NA         NA         NA        NA
# hsa-mir-423  4.15153e-02       0.000000 4.2470451  0.0709444 0.99507992        NA

c1c2u2af1wtkv12_lacz_vs_wtlacz_res <- results(LRTbatchc1c2_dds, contrast=c("condition", "U2AF1_WT_KRAS_G12V", "U2AF1_WT_LACZ"))

# log2 fold change (MLE): condition U2AF1_WT_KRAS_G12V vs U2AF1_WT_LACZ 
# LRT p-value: '~ batch + condition' vs '~ batch' 
# DataFrame with 60642 rows and 6 columns
#                baseMean log2FoldChange     lfcSE       stat     pvalue      padj
#               <numeric>      <numeric> <numeric>  <numeric>  <numeric> <numeric>
# A1BG            2.410861     -0.7079122  0.871516    3.90216   0.272225  0.428660
# A1BG-AS1      325.679038     -0.0520652  0.117217    4.83658   0.184162  0.324706
# A1CF            0.000000             NA        NA         NA         NA        NA
# A2M             0.673074      0.6357182  1.651937    3.86985   0.275865        NA
# A2M-AS1         8.505823     -0.8373270  0.490241    3.10339   0.375958  0.535881
# ...                  ...            ...       ...        ...        ...       ...
# ZYX          8.40173e+03      -0.063864 0.1048415 11.3233567 0.01009990 0.0357886
# ZYXP1        0.00000e+00             NA        NA         NA         NA        NA
# ZZEF1        1.91535e+03       0.104959 0.0699766 11.8879496 0.00777702 0.0290238
# hsa-mir-1253 0.00000e+00             NA        NA         NA         NA        NA
# hsa-mir-423  4.15153e-02       0.663711 4.2470451  0.0709444 0.99507992        NA

c1c2u2af1s34f_kv12_vs_wtlacz_res <- results(LRTbatchc1c2_dds, contrast=c("condition", "U2AF1_S34F_KRAS_G12V", "U2AF1_WT_LACZ"))

# log2 fold change (MLE): condition U2AF1_S34F_KRAS_G12V vs U2AF1_WT_LACZ 
# LRT p-value: '~ batch + condition' vs '~ batch' 
# DataFrame with 60642 rows and 6 columns
#                baseMean log2FoldChange     lfcSE       stat     pvalue      padj
#               <numeric>      <numeric> <numeric>  <numeric>  <numeric> <numeric>
# A1BG            2.410861       0.668087  0.766873    3.90216   0.272225  0.428660
# A1BG-AS1      325.679038       0.189481  0.116220    4.83658   0.184162  0.324706
# A1CF            0.000000             NA        NA         NA         NA        NA
# A2M             0.673074      -0.922571  1.753928    3.86985   0.275865        NA
# A2M-AS1         8.505823      -0.178158  0.464773    3.10339   0.375958  0.535881
# ...                  ...            ...       ...        ...        ...       ...
# ZYX          8.40173e+03       0.247542 0.1047832 11.3233567 0.01009990 0.0357886
# ZYXP1        0.00000e+00             NA        NA         NA         NA        NA
# ZZEF1        1.91535e+03       0.155425 0.0698693 11.8879496 0.00777702 0.0290238
# hsa-mir-1253 0.00000e+00             NA        NA         NA         NA        NA
# hsa-mir-423  4.15153e-02       0.000000 4.2470451  0.0709444 0.99507992        NA

#Generate differential gene exp volcano plots (sample command/code, does not include all pltos generated)
library('EnhancedVolcano')
EnhancedVolcano(c1c2u2af1s34f_lacz_vs_wtlacz_res, lab=rownames(c1c2u2af1s34f_lacz_vs_wtlacz_res), x='log2FoldChange', y='pvalue', title="U2AF1 S34F LACZ vs. U2AF1 WT LACZ")

#Filter results for padj<0.05 and export as CSV
c1c2filtered_u2af1s34f_lacz_vs_wtlacz_res <- c1c2u2af1s34f_lacz_vs_wtlacz_res[!is.na(c1c2u2af1s34f_lacz_vs_wtlacz_res$padj) & c1c2u2af1s34f_lacz_vs_wtlacz_res$padj<0.05,]
c1c2filtered_u2af1wtkv12_lacz_vs_wtlacz_res <- c1c2u2af1wtkv12_lacz_vs_wtlacz_res[!is.na(c1c2u2af1wtkv12_lacz_vs_wtlacz_res$padj) & c1c2u2af1wtkv12_lacz_vs_wtlacz_res$padj<0.05,]
c1c2u2af1s34f_kv12_vs_wtlacz_res <- c1c2u2af1s34f_kv12_vs_wtlacz_res[!is.na(c1c2u2af1s34f_kv12_vs_wtlacz_res$padj) & c1c2u2af1s34f_kv12_vs_wtlacz_res$padj<0.05,]

write.csv(as.data.frame(c1c2filtered_u2af1s34f_lacz_vs_wtlacz_res), file='~/Desktop/c1c2filtered_u2af1s34f_lacz_vs_wtlacz_res')
write.csv(as.data.frame(c1c2filtered_u2af1wtkv12_lacz_vs_wtlacz_res), file='~/Desktop/c1c2filtered_u2af1wtkv12_lacz_vs_wtlacz_res')
write.csv(as.data.frame(c1c2u2af1s34f_kv12_vs_wtlacz_res), file='~/Desktop/c1c2filtered_u2af1s34f_kv12_vs_wtlacz_res')
